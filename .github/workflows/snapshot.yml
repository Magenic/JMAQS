# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: JMAQS SnapShot Build

#on:
#  push:
#  tags:
#    -v*
on:
  push:
    branches: [master]

jobs:
  update_release_draft:
    runs-on: ubuntu-latest
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - name: Calculate New Version
        id: version
        uses: patrickjahns/version-drafter-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Draft Release notes
        uses: release-drafter/release-drafter@master
        with:
          version: ${{ format('v{0}', steps.version.outputs.next-version) }}
          tag: ${{ format('v{0}', steps.version.outputs.next-version) }}
          name: ${{ format('v{0}', steps.version.outputs.next-version) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  snapshot_build:
    runs-on: windows-latest
    steps:
      - name: Calculate New SnapShot Version Number
        id: version
        uses: patrickjahns/version-drafter-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v2
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Create settings file
        uses: s4u/maven-settings-action@v2.1.0
        with:
          sonatypeSnapshots: true
          servers: '[{"id": "github", "username": "jason-edstrom", "password": "${{secrets.PACKAGES}}"}]'
          override: true
          githubServer: false
      - name: Maven Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{runner.os}}-m2
      - name: Set Snapshot Version to ${{steps.version.outputs.next-version}}
        run: mvn versions:set -DnewVersion=${{steps.version.outputs.next-version}}-SNAPSHOT
      - name: Run Unit Tests
        run: mvn -Pgithub install -B -e -f pom.xml -fae
      - name: Deploy Packages to GitHub
        run: mvn -Pgithub deploy -B -e -f pom.xml

